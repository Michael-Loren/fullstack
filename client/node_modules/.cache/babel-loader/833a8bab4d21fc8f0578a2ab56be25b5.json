{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\projects\\\\fullstack\\\\client\\\\src\\\\components\\\\ComponentThing.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Fragment } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ComponentThing() {\n  _s();\n\n  const [currentData, setCurrentData] = useState([]);\n\n  const getData = async () => {\n    const response = await fetch(\"http://localhost:5000/todos/\");\n    const data = await response.json();\n    console.log(data);\n    setCurrentData(data);\n  };\n\n  const deleteTodo = async id => {\n    try {\n      const delTodo = await fetch(`http://localhost:5000/todos/${id}`, {\n        method: \"DELETE\"\n      });\n      console.log(delTodo);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(async () => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: currentData.map(d => /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: d.description\n      }, d.todo_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteTodo(d.todo_id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ComponentThing, \"0ppIIpeEPhgk1mV+oNwfbPqmHs4=\");\n\n_c = ComponentThing;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComponentThing\");","map":{"version":3,"sources":["C:/Users/micha/projects/fullstack/client/src/components/ComponentThing.js"],"names":["React","useState","useEffect","Fragment","ComponentThing","currentData","setCurrentData","getData","response","fetch","data","json","console","log","deleteTodo","id","delTodo","method","error","message","map","d","description","todo_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,OAAzB;;AACA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMM,OAAO,GAAG,YAAY;AAC1B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAJ,IAAAA,cAAc,CAACI,IAAD,CAAd;AACD,GAND;;AASA,QAAMI,UAAU,GAAG,MAAOC,EAAP,IAAa;AAC9B,QAAI;AACA,YAAMC,OAAO,GAAG,MAAMP,KAAK,CAAE,+BAA8BM,EAAG,EAAnC,EAAsC;AAC7DE,QAAAA,MAAM,EAAE;AADqD,OAAtC,CAA3B;AAKAL,MAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACH,KAPD,CAOE,OAAOE,KAAP,EAAc;AACZN,MAAAA,OAAO,CAACM,KAAR,CAAcA,KAAK,CAACC,OAApB;AACH;AACF,GAXD;;AAaAjB,EAAAA,SAAS,CAAC,YAAY;AACpBK,IAAAA,OAAO;AACR,GAFQ,EAEP,EAFO,CAAT;AAGA,sBACE;AAAA,cACGF,WAAW,CAACe,GAAZ,CAAiBC,CAAD,iBACb,QAAC,QAAD;AAAA,8BACF;AAAA,kBAAoBA,CAAC,CAACC;AAAtB,SAAQD,CAAC,CAACE,OAAV;AAAA;AAAA;AAAA;AAAA,cADE,eAEF;AAAQ,QAAA,OAAO,EAAET,UAAU,CAACO,CAAC,CAACE,OAAH,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFE;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAtCuBnB,c;;KAAAA,c","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Fragment } from \"react\";\r\nexport default function ComponentThing() {\r\n  const [currentData, setCurrentData] = useState([]);\r\n\r\n  const getData = async () => {\r\n    const response = await fetch(\"http://localhost:5000/todos/\");\r\n    const data = await response.json();\r\n\r\n    console.log(data);\r\n    setCurrentData(data);\r\n  };\r\n\r\n\r\n  const deleteTodo = async (id) =>{\r\n    try {\r\n        const delTodo = await fetch(`http://localhost:5000/todos/${id}`, {\r\n            method: \"DELETE\",\r\n\r\n        });\r\n\r\n        console.log(delTodo);\r\n    } catch (error) {\r\n        console.error(error.message)\r\n    }\r\n  }\r\n\r\n  useEffect(async () => {\r\n    getData();\r\n  },[]);\r\n  return (\r\n    <div>\r\n      {currentData.map((d) => (\r\n          <Fragment>\r\n        <p key={d.todo_id}>{d.description}</p>\r\n        <button onClick={deleteTodo(d.todo_id)}>Delete</button>\r\n        </Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}  \r\n"]},"metadata":{},"sourceType":"module"}